#!/usr/bin/env python
import os
import sys
import django
from datetime import date, timedelta

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'coach.settings')
django.setup()

from django.contrib.auth.models import User
from coach_app.models import RendezVous, Exercice, SessionReservation

def create_test_rdv():
    """Cr√©er des rendez-vous de test pour tester le syst√®me coach"""
    
    # R√©cup√©rer les utilisateurs
    try:
        client1 = User.objects.get(username='louis')
        client2 = User.objects.get(username='paul')
        client3 = User.objects.get(username='pil')
    except User.DoesNotExist as e:
        print(f"Utilisateur non trouv√©: {e}")
        return
    
    # R√©cup√©rer les exercices
    exercices = Exercice.objects.all()
    if not exercices.exists():
        print("Aucun exercice trouv√©. Cr√©ez d'abord des exercices.")
        return
    
    # Dates de test
    today = date.today()
    dates_test = [
        today + timedelta(days=1),  # Demain
        today + timedelta(days=2),  # Apr√®s-demain
        today + timedelta(days=-1), # Hier (termin√©)
        today + timedelta(days=-2), # Avant-hier (termin√©)
    ]
    
    heures_test = ['09:00', '10:00', '14:00', '15:00']
    
    rdv_crees = 0
    
    for i, client in enumerate([client1, client2, client3]):
        exercice = exercices[i % len(exercices)]
        
        for j, date_rdv in enumerate(dates_test):
            heure = heures_test[j % len(heures_test)]
            
            # Cr√©er une session de r√©servation
            session, created = SessionReservation.objects.get_or_create(
                user=client,
                defaults={'total_tarif': 0}
            )
            
            # D√©terminer le statut selon la date
            if date_rdv < today:
                statut = 'termine'
            elif j == 0:
                statut = 'en_attente'
            else:
                statut = 'valide'
            
            # Cr√©er le rendez-vous
            rdv, created = RendezVous.objects.get_or_create(
                user=client,
                date=date_rdv,
                heure=heure,
                exercice=exercice,
                defaults={
                    'session': session,
                    'duree': exercice.duree,
                    'tarif': exercice.tarif,
                    'statut': statut,
                    'notes_personnelles': f"Note de test pour {client.username} - {exercice.nom}"
                }
            )
            
            if created:
                rdv_crees += 1
                print(f"RDV cr√©√©: {client.username} - {exercice.nom} - {date_rdv} √† {heure} - {statut}")
            
            # Mettre √† jour le total de la session
            session.calculer_total()
    
    print(f"\nüéâ {rdv_crees} rendez-vous de test cr√©√©s avec succ√®s!")
    print("\nVous pouvez maintenant tester le syst√®me coach en vous connectant avec 'elvis'")

if __name__ == "__main__":
    create_test_rdv() 